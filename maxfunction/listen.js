module.exports = function(bot,fs,Markup){
		const startKeyboard = Markup.keyboard([
					[Markup.button.text('üá∑üá∫–†—É–±–ª—å –∫—É—Ä—Å–∏'),Markup.button.text('üõÉ–ë–æ–∑–æ—Ä –∫—É—Ä—Å–∏ (–ù–æ—Ä–∞—Å–º–∏–π)')],
					[Markup.button.text('üèõ–ú–∞—Ä–∫–∞–∑–∏–π –ë–∞–Ω–∫'),Markup.button.text('üìâ–í–∞–ª—é—Ç–∞ –±–∏—Ä–∂–∞—Å–∏'),Markup.button.text('üè¶–ë–∞–Ω–∫–ª–∞—Ä –∫—É—Ä—Å–∏')],
					[Markup.button.text('üìü–æ–º–æ–Ω–∞—Ç –≤–∞ –∫–∏—Ä–∏–¥–∏—Ç –∫–∞–ª–∫—É–ª—è—Ç—Ä–ª–∞—Ä–∏')]
					]).resize()
	bot.start(ctx=>{
		ctx.replyWithPhoto(
			{source: fs.createReadStream('./images/com.jpg')},
			{
				caption:`–ê—Å—Å–∞–ª–æ–º—É –∞–ª–∞–π–∫—É–º,<code> ${ctx.from.username} </code>\n` +
							fs.readFileSync('./text/start.txt', 'utf8').toString(),
				parse_mode: 'HTML',
				...startKeyboard
			}
		);
	})
	bot.hears('üìü–æ–º–æ–Ω–∞—Ç –≤–∞ –∫–∏—Ä–∏–¥–∏—Ç –∫–∞–ª–∫—É–ª—è—Ç—Ä–ª–∞—Ä–∏',ctx=>{
		ctx.reply(fs.readFileSync('./text/kalkulyatr.txt', 'utf8').toString(),
				{
				parse_mode: 'HTML',
				...Markup.inlineKeyboard([
					Markup.button.webApp('üó∫web –î–µ–ø–æ—Å–∏—Ç c–∞–ªc—É–ª–∞—Ç–æ—Ä','https://stupendous-donut-d62bdf.netlify.app/index.html'),
					Markup.button.webApp('üó∫web C—Ä–µ–¥–∏—Ç c–∞–ªc—É–ª–∞—Ç–æ—Ä','https://warm-jalebi-136c5b.netlify.app/index.html')])
			}
		);
		ctx.reply('ü§ñ –æ–º–æ–Ω–∞—Ç –≤–∞ –∫–∏—Ä–∏–¥–∏—Ç –∫–∞–ª–∫—É–ª—è—Ç—Ä–ª–∞—Ä–∏',Markup.keyboard(['‚ÜòÔ∏è–î–µ–ø–æ—Å–∏—Ç c–∞–ªc—É–ª–∞—Ç–æ—Ä','‚ÜñÔ∏èC—Ä–µ–¥–∏—Ç c–∞–ªc—É–ª–∞—Ç–æ—Ä']).resize())
	})
	bot.hears('üá∑üá∫–†—É–±–ª—å –∫—É—Ä—Å–∏',ctx=>{
		ctx.replyWithPhoto(
			{source: fs.createReadStream('./images/rubl.jpg')},
			{
				caption:fs.readFileSync('./text/rubl.txt', 'utf8').toString(),
				parse_mode: 'HTML',
				...startKeyboard
			}
		);
	})
	bot.hears('üõÉ–ë–æ–∑–æ—Ä –∫—É—Ä—Å–∏ (–ù–æ—Ä–∞—Å–º–∏–π)',ctx=>{
		ctx.replyWithPhoto(
			{source: fs.createReadStream('./images/market.jpg')},
			{
				caption:fs.readFileSync('./text/market.txt', 'utf8').toString(),
				parse_mode: 'HTML',
				...startKeyboard
			}
		);
	})
	bot.hears('üèõ–ú–∞—Ä–∫–∞–∑–∏–π –ë–∞–Ω–∫',ctx=>{
		ctx.replyWithPhoto(
			{source: fs.createReadStream('./images/center_bank.jpg')},
			{
				caption:fs.readFileSync('./text/center_bank.txt', 'utf8').toString(),
				parse_mode: 'HTML',
				...startKeyboard
			}
		);
	})
	bot.hears('üè¶–ë–∞–Ω–∫–ª–∞—Ä –∫—É—Ä—Å–∏',ctx=>{
		ctx.replyWithPhoto(
			{source: fs.createReadStream('./images/dollar.jpg')},
			{
				caption:fs.readFileSync('./text/dollar.txt', 'utf8').toString(),
				parse_mode: 'HTML',
				...startKeyboard
			}
		);
	})
	bot.hears('üìâ–í–∞–ª—é—Ç–∞ –±–∏—Ä–∂–∞—Å–∏',ctx=>{
		ctx.replyWithPhoto(
			{source: fs.createReadStream('./images/stock_exchange.jpg')},
			{
				caption:fs.readFileSync('./text/stock_exchange.txt', 'utf8').toString(),
				parse_mode: 'HTML',
				...startKeyboard
			}
		);
	})
	bot.hears('‚ÜòÔ∏è–î–µ–ø–æ—Å–∏—Ç c–∞–ªc—É–ª–∞—Ç–æ—Ä',ctx=>{
    	ctx.scene.enter('scenesDeposit');
	})
	bot.hears('‚ÜñÔ∏èC—Ä–µ–¥–∏—Ç c–∞–ªc—É–ª–∞—Ç–æ—Ä',ctx=>{
	    ctx.scene.enter('scenesCredit');
	})
}